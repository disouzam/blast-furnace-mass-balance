<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BlastFurnace.MassBalance.Lib</name>
    </assembly>
    <members>
        <member name="T:BlastFurnace.MassBalance.Lib.About">
            <summary>
            Contains description and other metadata of BlasFurnace Mass Balance library/application
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.About.Description">
            <summary>
            A textual description of the purpose of Blast Furnace mass balance library/application
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.About.AppTitle">
            <summary>
            Title of the application
            </summary>
        </member>
        <member name="T:BlastFurnace.MassBalance.Lib.AirBlow">
            <summary>
            Describes composition and other variables related to air blow in Blast Furnace
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.AirBlow.O2Content">
            <summary>
            Oxygen content in air blow
            </summary>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.AirBlow.#ctor(BlastFurnace.MassBalance.Lib.Percentual)">
            <summary>
            Initialize air blow properties
            </summary>
            <param name="o2Content"></param>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.AirBlow.ToString">
            <summary>
            String representation of air blow
            </summary>
            <returns></returns>
        </member>
        <member name="T:BlastFurnace.MassBalance.Lib.BlastFurnaceCharge">
            <summary>
            A wrapper class to group all raw materials for a blast furnace and perform mass balance calculation
            </summary>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.BlastFurnaceCharge.AddHotMetal(BlastFurnace.MassBalance.Lib.HotMetal)">
            <summary>
            Add only Hot Metal to an existing instance of BlastFurnaceCharge
            </summary>
            <param name="hotMetal"></param>
            <returns>A handle of this instance after adding Hot Metal to the object</returns>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.BlastFurnaceCharge.AddIronOreBlend(BlastFurnace.MassBalance.Lib.IronOreBlend)">
            <summary>
            Add only Iron Ore Blend to an existing instance of BlastFurnaceCharge
            </summary>
            <param name="ironOreBlend"></param>
            <returns>A handle of this instance after adding Iron Ore Blend to the object</returns>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.BlastFurnaceCharge.AddCokeBlend(BlastFurnace.MassBalance.Lib.CokeBlend)">
            <summary>
            Add only Coke Blend to an existing instance of BlastFurnaceCharge
            </summary>
            <param name="cokeBlend"></param>
            <returns>A handle of this instance after adding Coke Blend to the object</returns>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.BlastFurnaceCharge.AddPCI(BlastFurnace.MassBalance.Lib.PulverizedCoalInjection)">
            <summary>
            Add only Pulverized Coal Injection to an existing instance of BlastFurnaceCharge
            </summary>
            <param name="pci"></param>
            <returns>A handle of this instance after adding Pulverized Coal Injection to the object</returns>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.BlastFurnaceCharge.AddAirBlow(BlastFurnace.MassBalance.Lib.AirBlow)">
            <summary>
            Add only Air Blow to an existing instance of BlastFurnaceCharge
            </summary>
            <param name="airBlow"></param>
            <returns>A handle of this instance after adding Air Blow to the object</returns>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.BlastFurnaceCharge.#ctor">
            <summary>
            Parameterless constructor
            </summary>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.BlastFurnaceCharge.#ctor(BlastFurnace.MassBalance.Lib.HotMetal,BlastFurnace.MassBalance.Lib.IronOreBlend,BlastFurnace.MassBalance.Lib.CokeBlend,BlastFurnace.MassBalance.Lib.PulverizedCoalInjection,BlastFurnace.MassBalance.Lib.AirBlow)">
            <summary>
            Initialization of Blast Furnace Charge
            </summary>
            <param name="hotMetal"></param>
            <param name="ironOreBlend"></param>
            <param name="cokeBlend"></param>
            <param name="pci"></param>
            <param name="airBlow"></param>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.BlastFurnaceCharge.HotMetal">
            <summary>
            Hot metal composition and weight that intends to be produced in blast furnace
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.BlastFurnaceCharge.IronOreBlend">
            <summary>
            Iron ore blend used in blast furnace
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.BlastFurnaceCharge.CokeBlend">
            <summary>
             Coke blend used in blast furnace
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.BlastFurnaceCharge.AirBlow">
            <summary>
            Air composition to blow blast furnace
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.BlastFurnaceCharge.PCI">
            <summary>
            Pulverized coal injection composition and weight
            </summary>
        </member>
        <member name="T:BlastFurnace.MassBalance.Lib.Coke">
            <summary>
            Describes coke composition and its proportion in a mixture with other cokes
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.Coke.CContent">
            <summary>
            C content of coke
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.Coke.Proportion">
            <summary>
            Proportion of coke in a blending setup
            </summary>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.Coke.#ctor(BlastFurnace.MassBalance.Lib.Percentual,BlastFurnace.MassBalance.Lib.Percentual)">
            <summary>
            Initialize an coke instance
            </summary>
            <param name="cContent"></param>
            <param name="proportion"></param>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.Coke.ToString">
            <summary>
            String representation of Coke
            </summary>
            <returns></returns>
        </member>
        <member name="T:BlastFurnace.MassBalance.Lib.CokeBlend">
            <summary>
            A collection of Cokes
            </summary>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.CokeBlend.#ctor">
            <summary>
            Initialization of coke blend
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.CokeBlend.Cokes">
            <summary>
            A read-only collection of Cokes
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.CokeBlend.TotalProportion">
            <summary>
            Total proportion of Cokes in this blend.
            </summary>
            <remarks>
            For a full set up coke blend, this value must be equal to 100%
            For a partially defined coke blend, this value can be lower than 100%
            </remarks>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.CokeBlend.AverageCContent">
            <summary>
            Calculate and returns average carbon content of coke blend
            </summary>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.CokeBlend.Add(BlastFurnace.MassBalance.Lib.Coke)">
            <summary>
            Add one coke to the blend of Cokes
            </summary>
            <param name="coke"></param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.CokeBlend.NormalizeProportions">
            <summary>
            Normalize proportions of Cokes to 100%
            </summary>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.CokeBlend.ToString">
            <summary>
            String representation of CokeBlend
            </summary>
            <returns></returns>
        </member>
        <member name="T:BlastFurnace.MassBalance.Lib.HotMetal">
            <summary>
            Describes hot metal weight and composition
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.HotMetal.Weight">
            <summary>
            Weight of hot metal
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.HotMetal.FePercent">
            <summary>
            Percentage of Iron in Hot Metal
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.HotMetal.CPercent">
            <summary>
            Percentage of Carbon in Hot Metal
            </summary>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.HotMetal.#ctor(BlastFurnace.MassBalance.Lib.Weight,BlastFurnace.MassBalance.Lib.Percentual,BlastFurnace.MassBalance.Lib.Percentual)">
            <summary>
            Initialize and validate hot metal setting
            </summary>
            <param name="weight"></param>
            <param name="fePercent"></param>
            <param name="cPercent"></param>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.HotMetal.ToString">
            <summary>
            String representation of HotMetal
            </summary>
        </member>
        <member name="T:BlastFurnace.MassBalance.Lib.IronOre">
            <summary>
            Describes iron ore composition and its proportion in a mixture with other iron ores
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.IronOre.FeContent">
            <summary>
            Fe content of Iron Ore
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.IronOre.Proportion">
            <summary>
            Proportion of Iron Ore in a blending setup
            </summary>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.IronOre.#ctor(BlastFurnace.MassBalance.Lib.Percentual,BlastFurnace.MassBalance.Lib.Percentual)">
            <summary>
            Initialize an iron ore instance with zero weight
            </summary>
            <param name="feContent"></param>
            <param name="proportion"></param>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.IronOre.#ctor(BlastFurnace.MassBalance.Lib.Percentual,BlastFurnace.MassBalance.Lib.Percentual,BlastFurnace.MassBalance.Lib.Weight)">
            <summary>
            Initialize an iron ore instance with a given proportion and weight
            </summary>
            <param name="feContent"></param>
            <param name="proportion"></param>
            <param name="weight"></param>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.IronOre.Weight">
            <summary>
            Weight of current iron ore
            </summary>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.IronOre.SetWeight(System.Double,BlastFurnace.MassBalance.Lib.WeightUnits)">
            <summary>
            Set new value and unit for iron ore weight
            </summary>
            <param name="newValue"></param>
            <param name="newUnit"></param>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.IronOre.ToString">
            <summary>
            String representation of IronOre
            </summary>
            <returns></returns>
        </member>
        <member name="T:BlastFurnace.MassBalance.Lib.IronOreBlend">
            <summary>
            A collection of Iron Ores
            </summary>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.IronOreBlend.GetBlendRequiredWeight(BlastFurnace.MassBalance.Lib.HotMetal)">
            <summary>
            Get the required weight of iron ore blend based on hot metal characteristics
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.IronOreBlend.SetIronOreWeightsBasedOnRequiredWeight(BlastFurnace.MassBalance.Lib.HotMetal)">
            <summary>
            Set individual iron ore weights based on calculated required weight
            </summary>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.IronOreBlend.#ctor">
            <summary>
            Initialization of iron ore blend
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.IronOreBlend.IronOres">
            <summary>
            A read-only collection of iron ores
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.IronOreBlend.TotalProportion">
            <summary>
            Total proportion of iron ores in this blend.
            </summary>
            <remarks>
            For a full set up iron ore blend, this value must be equal to 100%
            For a partially defined iron ore blend, this value can be lower than 100%
            </remarks>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.IronOreBlend.AverageFeContent">
            <summary>
            Calculate and returns average iron content of iron ore blend
            </summary>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.IronOreBlend.Add(BlastFurnace.MassBalance.Lib.IronOre)">
            <summary>
            Add one iron ore to the blend of iron ores
            </summary>
            <param name="ironOre"></param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.IronOreBlend.NormalizeProportions">
            <summary>
            Normalize proportions of iron ores to 100%
            </summary>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.IronOreBlend.ToString">
            <summary>
            String representation of IronOreBlend
            </summary>
            <returns></returns>
        </member>
        <member name="T:BlastFurnace.MassBalance.Lib.Percentual">
            <summary>
            Describe percent quantities (from 0 to 100%) that describe raw material chemistry
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.Percentual.Value">
            <summary>
            Hold the percentage value
            </summary>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.Percentual.#ctor(System.Double)">
            <summary>
            Initialize and validate Percentual instance
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.Percentual.ToString">
            <summary>
            String representation of Percentual
            </summary>
        </member>
        <member name="T:BlastFurnace.MassBalance.Lib.PulverizedCoalInjection">
            <summary>
            Describes Pulverized Coal Injection composition
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.PulverizedCoalInjection.CContent">
            <summary>
            C content of Pulverized Coal Injection
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.PulverizedCoalInjection.Weight">
            <summary>
            Weight of Pulverized Coal Injection
            </summary>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.PulverizedCoalInjection.#ctor(BlastFurnace.MassBalance.Lib.Percentual,BlastFurnace.MassBalance.Lib.Weight)">
            <summary>
            Initialize an Pulverized Coal Injection instance
            </summary>
            <param name="cContent"></param>
            <param name="weight"></param>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.PulverizedCoalInjection.ToString">
            <summary>
            String representation of Pulverized Coal Injection
            </summary>
            <returns></returns>
        </member>
        <member name="T:BlastFurnace.MassBalance.Lib.UnitConversion">
            <summary>
            Static class that performs conversion between different measurement units
            </summary>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.UnitConversion.WeightConversion(BlastFurnace.MassBalance.Lib.Weight,BlastFurnace.MassBalance.Lib.WeightUnits)">
            <summary>
            Performs conversion between weight units
            </summary>
            <param name="originalWeight"></param>
            <param name="newWeightUnits"></param>
            <returns></returns>
        </member>
        <member name="T:BlastFurnace.MassBalance.Lib.Weight">
            <summary>
            Holds both the quantity and unit of weights processed by mass balance and other engineering calculations
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.Weight.Value">
            <summary>
            The value of weight
            </summary>
        </member>
        <member name="P:BlastFurnace.MassBalance.Lib.Weight.Unit">
            <summary>
            The unit of measurement of weight
            </summary>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.Weight.GetWeightValue(BlastFurnace.MassBalance.Lib.WeightUnits)">
            <summary>
            Get double converted value associated with this weight in the unit specified in outputUnit
            </summary>
            <param name="outputUnit"></param>
            <returns></returns>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.Weight.#ctor(System.Double,BlastFurnace.MassBalance.Lib.WeightUnits)">
            <summary>
            Initialize Weight and validate it
            </summary>
            <param name="value"></param>
            <param name="units"></param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:BlastFurnace.MassBalance.Lib.Weight.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:BlastFurnace.MassBalance.Lib.WeightUnits">
            <summary>
            Describe the weight units available to be used in mass balance and other engineering calculations
            </summary>
            <remarks>
            <list type="bullet">
            <item>kilogram</item>
            <item>metric ton</item> 
            </list>
            </remarks>
        </member>
    </members>
</doc>
