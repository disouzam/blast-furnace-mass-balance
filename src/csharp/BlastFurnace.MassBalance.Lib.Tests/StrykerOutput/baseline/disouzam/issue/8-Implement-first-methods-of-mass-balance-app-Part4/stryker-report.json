{"schemaVersion":"1","thresholds":{"high":80,"low":70},"projectRoot":"D:\\GitHubRepos\\blast-furnace-mass-balance\\src\\csharp\\BlastFurnace.MassBalance.Lib","files":{"D:\\GitHubRepos\\blast-furnace-mass-balance\\src\\csharp\\BlastFurnace.MassBalance.Lib\\About.cs":{"language":"cs","source":"using System.Text;\r\n\r\nnamespace BlastFurnace.MassBalance.Lib\r\n{\r\n    /// \u003Csummary\u003E\r\n    /// Contains description and other metadata of BlasFurnace Mass Balance library/application\r\n    /// \u003C/summary\u003E\r\n    public static class About\r\n    {\r\n        private static readonly string paragraph1 = \u0022Este programa realiza um c\u00E1lculo de carga simplificado para um alto forno, \u0022 \u002B\r\n                                                \u0022feito com base nos exerc\u00EDcios feitos em sala de aula e, tamb\u00E9m, com base nos \u0022 \u002B\r\n                                                \u0022conhecimentos do grupo, tanto na montagem da linha de pensamento como na \u0022 \u002B\r\n                                                \u0022montagem do programa usando a linguagem Pascal.\u0022;\r\n\r\n        private static readonly string paragraph2 = \u0022\\r\\n\u0022 \u002B \u0022O programa considera o carregamento de at\u00E9 3 tipos de min\u00E9rios \u0022 \u002B\r\n                                                \u0022(estes podem ser os min\u00E9rios, pelotas e s\u00EDnteres).\u0022;\r\n\r\n        private static readonly string paragraph3 = \u0022\\r\\n\u0022 \u002B \u0022A partir de uma propor\u00E7\u00E3o em peso fixa, a carga de min\u00E9rios \u00E9 calculada. \u0022 \u002B\r\n                                                \u0022Calcula-se tamb\u00E9m o teor m\u00E9dio de ferro contido nela.\u0022;\r\n\r\n        private static readonly string paragraph4 = \u0022\\r\\n\u0022 \u002B \u0022A carga de coque \u00E9 feita de forma similar: estipula-se a propor\u00E7\u00E3o dos \u0022 \u002B\r\n                                                \u0022diferentes tipos de coque (no m\u00E1ximo 3) e calcula-se a massa de cada um deles\u0022 \u002B\r\n                                                \u0022para atender ao processo.\u0022;\r\n\r\n        private static readonly string paragraph5 = \u0022\\r\\n\u0022 \u002B \u0022Pode-se calcular a quantidade de PCI m\u00E1xima a se injetar, e a partir dela, \u0022 \u002B\r\n                                                \u0022estipular um valor a ser usado.\u0022;\r\n\r\n        private static readonly string paragraph6 = \u0022\\r\\n\u0022 \u002B \u0022O sopro pode ser calculado, considerando-se a necessidade de oxig\u00EAnio e \u0022 \u002B\r\n                                                \u0022o seu teor no sopro.\u0022;\r\n\r\n        private static readonly string paragraph7 = \u0022\\r\\n\u0022 \u002B \u0022Os c\u00E1lculos s\u00E3o feitos com base nas considera\u00E7\u00F5es de que todo o ferro \u0022 \u002B\r\n                                                \u0022carregado \u00E9 reduzido e se incorpora ao gusa l\u00EDquido e a rea\u00E7\u00E3o de redu\u00E7\u00E3o da \u0022 \u002B\r\n                                                \u0022wustita a ferro se processam integralmente a 900 \u00B0C, de forma que a \u0022 \u002B\r\n                                                \u0022rea\u00E7\u00E3o de redu\u00E7\u00E3o seja:\u0022;\r\n\r\n        private static readonly string paragraph8 = \u0022\\r\\n\u0022 \u002B \u0022FeO \u002B3,12CO = Fe \u002B 2,12 CO \u002B CO2.\u0022;\r\n\r\n        private static readonly string paragraph9 = \u0022\\r\\n\u0022 \u002B \u0022Ap\u00F3s o uso do programa, pode-se armazenar os dados em um arquivo texto \u0022 \u002B\r\n                                                \u0022(Calculo_de_carga.doc)\u0022;\r\n\r\n        private static string GetDescription()\r\n        {\r\n            var sb = new StringBuilder();\r\n\r\n            sb.AppendLine(paragraph1);\r\n            sb.AppendLine(paragraph2);\r\n            sb.AppendLine(paragraph3);\r\n            sb.AppendLine(paragraph4);\r\n            sb.AppendLine(paragraph5);\r\n            sb.AppendLine(paragraph6);\r\n            sb.AppendLine(paragraph7);\r\n            sb.AppendLine(paragraph8);\r\n            sb.AppendLine(paragraph9);\r\n\r\n            return sb.ToString();\r\n        }\r\n\r\n        /// \u003Csummary\u003E\r\n        /// A textual description of the purpose of Blast Furnace mass balance library/application\r\n        /// \u003C/summary\u003E\r\n        public static string Description\r\n        {\r\n            get\r\n            {\r\n                return GetDescription();\r\n            }\r\n        }\r\n\r\n        /// \u003Csummary\u003E\r\n        /// Title of the application\r\n        /// \u003C/summary\u003E\r\n        public static string AppTitle\r\n        {\r\n            get\r\n            {\r\n                return \u0022Blast Furnace Mass Balance Application\u0022;\r\n            }\r\n        }\r\n    }\r\n}\r\n","mutants":[{"id":"0","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":10,"column":53},"end":{"line":10,"column":130}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"1","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":11,"column":49},"end":{"line":11,"column":128}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"2","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":12,"column":49},"end":{"line":12,"column":124}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"3","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":13,"column":49},"end":{"line":13,"column":98}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"4","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":15,"column":53},"end":{"line":15,"column":59}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"5","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":15,"column":62},"end":{"line":15,"column":127}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"6","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":16,"column":49},"end":{"line":16,"column":101}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"7","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":18,"column":53},"end":{"line":18,"column":59}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"8","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":18,"column":62},"end":{"line":18,"column":137}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"9","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":19,"column":49},"end":{"line":19,"column":104}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"10","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":21,"column":53},"end":{"line":21,"column":59}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"11","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":21,"column":62},"end":{"line":21,"column":135}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"12","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":22,"column":49},"end":{"line":22,"column":128}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"13","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":23,"column":49},"end":{"line":23,"column":76}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"14","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":25,"column":53},"end":{"line":25,"column":59}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"15","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":25,"column":62},"end":{"line":25,"column":139}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"16","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":26,"column":49},"end":{"line":26,"column":82}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"17","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":28,"column":53},"end":{"line":28,"column":59}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"18","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":28,"column":62},"end":{"line":28,"column":136}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"19","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":29,"column":49},"end":{"line":29,"column":71}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"20","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":31,"column":53},"end":{"line":31,"column":59}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"21","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":31,"column":62},"end":{"line":31,"column":134}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"22","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":32,"column":49},"end":{"line":32,"column":128}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"23","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":33,"column":49},"end":{"line":33,"column":119}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"24","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":34,"column":49},"end":{"line":34,"column":74}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"25","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":36,"column":53},"end":{"line":36,"column":59}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"26","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":36,"column":62},"end":{"line":36,"column":97}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"27","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":38,"column":53},"end":{"line":38,"column":59}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"28","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":38,"column":62},"end":{"line":38,"column":135}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"29","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":39,"column":49},"end":{"line":39,"column":73}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":true},{"id":"30","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":42,"column":9},"end":{"line":56,"column":10}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"31","mutatorName":"Statement mutation","replacement":";","location":{"start":{"line":45,"column":13},"end":{"line":45,"column":39}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"32","mutatorName":"Statement mutation","replacement":";","location":{"start":{"line":46,"column":13},"end":{"line":46,"column":39}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"33","mutatorName":"Statement mutation","replacement":";","location":{"start":{"line":47,"column":13},"end":{"line":47,"column":39}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"34","mutatorName":"Statement mutation","replacement":";","location":{"start":{"line":48,"column":13},"end":{"line":48,"column":39}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"35","mutatorName":"Statement mutation","replacement":";","location":{"start":{"line":49,"column":13},"end":{"line":49,"column":39}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"36","mutatorName":"Statement mutation","replacement":";","location":{"start":{"line":50,"column":13},"end":{"line":50,"column":39}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"37","mutatorName":"Statement mutation","replacement":";","location":{"start":{"line":51,"column":13},"end":{"line":51,"column":39}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"38","mutatorName":"Statement mutation","replacement":";","location":{"start":{"line":52,"column":13},"end":{"line":52,"column":39}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"39","mutatorName":"Statement mutation","replacement":";","location":{"start":{"line":53,"column":13},"end":{"line":53,"column":39}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"40","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":64,"column":13},"end":{"line":66,"column":14}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"41","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":75,"column":13},"end":{"line":77,"column":14}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"42","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":76,"column":24},"end":{"line":76,"column":64}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false}]},"D:\\GitHubRepos\\blast-furnace-mass-balance\\src\\csharp\\BlastFurnace.MassBalance.Lib\\AirBlow.cs":{"language":"cs","source":"using Newtonsoft.Json;\n\nnamespace BlastFurnace.MassBalance.Lib;\n\n/// \u003Csummary\u003E\n/// Describes composition and other variables related to air blow in Blast Furnace\n/// \u003C/summary\u003E\npublic class AirBlow\n{\n    /// \u003Csummary\u003E\n    /// Oxygen content in air blow\n    /// \u003C/summary\u003E\n    public Percentual O2Content { get; set; }\n\n    /// \u003Csummary\u003E\n    /// Initialize air blow properties\n    /// \u003C/summary\u003E\n    /// \u003Cparam name=\u0022o2Content\u0022\u003E\u003C/param\u003E\n    public AirBlow(Percentual o2Content)\n    {\n        O2Content = o2Content;\n    }\n\n    /// \u003Csummary\u003E\n    /// String representation of air blow\n    /// \u003C/summary\u003E\n    /// \u003Creturns\u003E\u003C/returns\u003E\n    public override string ToString()\n    {\n        var jsonRepresentation = JsonConvert.SerializeObject(this, Formatting.Indented);\n        return jsonRepresentation.ToString();\n    }\n}\n","mutants":[{"id":"43","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":20,"column":5},"end":{"line":22,"column":6}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"44","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":29,"column":5},"end":{"line":32,"column":6}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false}]},"D:\\GitHubRepos\\blast-furnace-mass-balance\\src\\csharp\\BlastFurnace.MassBalance.Lib\\Coke.cs":{"language":"cs","source":"using Newtonsoft.Json;\r\n\r\nnamespace BlastFurnace.MassBalance.Lib;\r\n\r\n/// \u003Csummary\u003E\r\n/// Describes coke composition and its proportion in a mixture with other cokes\r\n/// \u003C/summary\u003E\r\npublic class Coke\r\n{\r\n    /// \u003Csummary\u003E\r\n    /// C content of coke\r\n    /// \u003C/summary\u003E\r\n    public Percentual CContent { get; set; }\r\n\r\n    /// \u003Csummary\u003E\r\n    /// Proportion of coke in a blending setup\r\n    /// \u003C/summary\u003E\r\n    public Percentual Proportion { get; set; }\n\n    /// \u003Csummary\u003E\r\n    /// Initialize an coke instance\r\n    /// \u003C/summary\u003E\r\n    /// \u003Cparam name=\u0022cContent\u0022\u003E\u003C/param\u003E\r\n    /// \u003Cparam name=\u0022proportion\u0022\u003E\u003C/param\u003E\r\n    public Coke(Percentual cContent, Percentual proportion)\r\n    {\r\n        CContent = cContent;\r\n        Proportion = proportion;\r\n    }\r\n\r\n    /// \u003Csummary\u003E\r\n    /// String representation of Coke\r\n    /// \u003C/summary\u003E\r\n    /// \u003Creturns\u003E\u003C/returns\u003E\r\n    public override string ToString()\r\n    {\r\n        var jsonRepresentation = JsonConvert.SerializeObject(this, Formatting.Indented);\r\n        return jsonRepresentation.ToString();\r\n    }\r\n}\r\n","mutants":[{"id":"45","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":26,"column":5},"end":{"line":29,"column":6}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"46","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":36,"column":5},"end":{"line":39,"column":6}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false}]},"D:\\GitHubRepos\\blast-furnace-mass-balance\\src\\csharp\\BlastFurnace.MassBalance.Lib\\CokeBlend.cs":{"language":"cs","source":"using System;\r\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\n\nusing Newtonsoft.Json;\n\nnamespace BlastFurnace.MassBalance.Lib;\r\n\r\n/// \u003Csummary\u003E\r\n/// A collection of Cokes\r\n/// \u003C/summary\u003E\r\npublic class CokeBlend\r\n{\r\n    private readonly List\u003CCoke\u003E cokes = new List\u003CCoke\u003E();\n\n    /// \u003Csummary\u003E\n    /// A read-only collection of Cokes\n    /// \u003C/summary\u003E\n    public ReadOnlyCollection\u003CCoke\u003E Cokes\n    {\n        get\n        {\n            return cokes.AsReadOnly();\n        }\n    }\n\n    /// \u003Csummary\u003E\r\n    /// Total proportion of Cokes in this blend.\r\n    /// \u003C/summary\u003E\r\n    /// \u003Cremarks\u003E\r\n    /// For a full set up coke blend, this value must be equal to 100%\r\n    /// For a partially defined coke blend, this value can be lower than 100%\r\n    /// \u003C/remarks\u003E\r\n    public double TotalProportion { get; private set; }\r\n\r\n    /// \u003Csummary\u003E\r\n    /// Add one coke to the blend of Cokes\r\n    /// \u003C/summary\u003E\r\n    /// \u003Cparam name=\u0022coke\u0022\u003E\u003C/param\u003E\r\n    /// \u003Cexception cref=\u0022InvalidOperationException\u0022\u003E\u003C/exception\u003E\r\n    public void Add(Coke coke)\r\n    {\r\n        if (TotalProportion \u002B coke.Proportion.Value \u003E 100)\r\n        {\r\n            throw new InvalidOperationException(\u0022Total proportion must be at a maximum of 100%.\u0022);\r\n        }\r\n\r\n        TotalProportion \u002B= coke.Proportion.Value;\r\n        cokes.Add(coke);\r\n    }\r\n\r\n    /// \u003Csummary\u003E\r\n    /// Normalize proportions of Cokes to 100%\r\n    /// \u003C/summary\u003E\r\n    public void NormalizeProportions()\r\n    {\r\n        var tempTotalProportion = 0d;\r\n\r\n        foreach (var coke in cokes)\r\n        {\r\n            coke.Proportion.Value = coke.Proportion.Value / TotalProportion * 100;\r\n            tempTotalProportion \u002B= coke.Proportion.Value;\r\n        }\r\n\r\n        TotalProportion = tempTotalProportion;\r\n    }\n\n    /// \u003Csummary\u003E\n    /// String representation of CokeBlend\n    /// \u003C/summary\u003E\n    /// \u003Creturns\u003E\u003C/returns\u003E\n    public override string ToString()\n    {\n        var jsonRepresentation = JsonConvert.SerializeObject(this, Formatting.Indented);\r\n\r\n        return jsonRepresentation.ToString();\n    }\r\n}\r\n","mutants":[{"id":"47","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":22,"column":9},"end":{"line":24,"column":10}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"48","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":42,"column":5},"end":{"line":50,"column":6}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"49","mutatorName":"Equality mutation","replacement":"TotalProportion \u002B coke.Proportion.Value \u003C 100","location":{"start":{"line":43,"column":13},"end":{"line":43,"column":58}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"50","mutatorName":"Equality mutation","replacement":"TotalProportion \u002B coke.Proportion.Value \u003E= 100","location":{"start":{"line":43,"column":13},"end":{"line":43,"column":58}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"51","mutatorName":"Negate expression","replacement":"!(TotalProportion \u002B coke.Proportion.Value \u003E 100)","location":{"start":{"line":43,"column":13},"end":{"line":43,"column":58}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"52","mutatorName":"Arithmetic mutation","replacement":"TotalProportion - coke.Proportion.Value","location":{"start":{"line":43,"column":13},"end":{"line":43,"column":52}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"53","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":44,"column":9},"end":{"line":46,"column":10}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"54","mutatorName":"Statement mutation","replacement":";","location":{"start":{"line":45,"column":13},"end":{"line":45,"column":99}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"55","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":45,"column":49},"end":{"line":45,"column":97}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"56","mutatorName":"AddAssignmentExpression to SubtractAssignmentExpression mutation","replacement":"TotalProportion -= coke.Proportion.Value","location":{"start":{"line":48,"column":9},"end":{"line":48,"column":49}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"57","mutatorName":"Statement mutation","replacement":";","location":{"start":{"line":49,"column":9},"end":{"line":49,"column":25}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"58","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":56,"column":5},"end":{"line":66,"column":6}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"59","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":60,"column":9},"end":{"line":63,"column":10}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"60","mutatorName":"Arithmetic mutation","replacement":"coke.Proportion.Value / TotalProportion / 100","location":{"start":{"line":61,"column":37},"end":{"line":61,"column":82}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"61","mutatorName":"Arithmetic mutation","replacement":"coke.Proportion.Value * TotalProportion","location":{"start":{"line":61,"column":37},"end":{"line":61,"column":76}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"62","mutatorName":"AddAssignmentExpression to SubtractAssignmentExpression mutation","replacement":"tempTotalProportion -= coke.Proportion.Value","location":{"start":{"line":62,"column":13},"end":{"line":62,"column":57}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"63","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":73,"column":5},"end":{"line":77,"column":6}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false}]},"D:\\GitHubRepos\\blast-furnace-mass-balance\\src\\csharp\\BlastFurnace.MassBalance.Lib\\HotMetal.cs":{"language":"cs","source":"using System;\r\n\r\nusing Newtonsoft.Json;\r\nusing Newtonsoft.Json.Converters;\r\n\r\nnamespace BlastFurnace.MassBalance.Lib;\r\n\r\n/// \u003Csummary\u003E\r\n/// Describes hot metal weight and composition\r\n/// \u003C/summary\u003E\r\npublic class HotMetal\r\n{\r\n    /// \u003Csummary\u003E\r\n    /// Weight of hot metal\r\n    /// \u003C/summary\u003E\r\n    public Weight Weight { get; set; }\r\n\r\n    /// \u003Csummary\u003E\r\n    /// Percentage of Iron in Hot Metal\r\n    /// \u003C/summary\u003E\r\n    public Percentual FePercent { get; set; }\r\n\r\n    /// \u003Csummary\u003E\r\n    /// Percentage of Carbon in Hot Metal\r\n    /// \u003C/summary\u003E\r\n    public Percentual CPercent { get; set; }\r\n\r\n    /// \u003Csummary\u003E\r\n    /// Initialize and validate hot metal setting\r\n    /// \u003C/summary\u003E\r\n    /// \u003Cparam name=\u0022weight\u0022\u003E\u003C/param\u003E\r\n    /// \u003Cparam name=\u0022fePercent\u0022\u003E\u003C/param\u003E\r\n    /// \u003Cparam name=\u0022cPercent\u0022\u003E\u003C/param\u003E\r\n    public HotMetal(Weight weight, Percentual fePercent, Percentual cPercent)\r\n    {\r\n        if (fePercent.Value \u002B cPercent.Value \u003E 100)\r\n        {\r\n            throw new InvalidOperationException($\u0022Composition should not exceed 100%! Current value is at {fePercent.Value \u002B cPercent.Value} %.\u0022);\r\n        }\r\n        Weight = weight;\r\n        FePercent = fePercent;\r\n        CPercent = cPercent;\r\n    }\r\n\r\n    /// \u003Csummary\u003E\r\n    /// String representation of HotMetal\r\n    /// \u003C/summary\u003E\r\n    public override string ToString()\r\n    {\r\n        // https://code-maze.com/csharp-serialize-enum-to-string/\r\n        var serializerSettings = new JsonSerializerSettings();\r\n        serializerSettings.Converters.Add(new StringEnumConverter());\r\n\r\n        var jsonRepresentation = JsonConvert.SerializeObject(this, Formatting.Indented, serializerSettings);\r\n\r\n        return jsonRepresentation.ToString();\r\n    }\r\n}\r\n","mutants":[{"id":"64","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":35,"column":5},"end":{"line":43,"column":6}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"65","mutatorName":"Equality mutation","replacement":"fePercent.Value \u002B cPercent.Value \u003C 100","location":{"start":{"line":36,"column":13},"end":{"line":36,"column":51}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"66","mutatorName":"Equality mutation","replacement":"fePercent.Value \u002B cPercent.Value \u003E= 100","location":{"start":{"line":36,"column":13},"end":{"line":36,"column":51}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"67","mutatorName":"Negate expression","replacement":"!(fePercent.Value \u002B cPercent.Value \u003E 100)","location":{"start":{"line":36,"column":13},"end":{"line":36,"column":51}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"68","mutatorName":"Arithmetic mutation","replacement":"fePercent.Value - cPercent.Value","location":{"start":{"line":36,"column":13},"end":{"line":36,"column":45}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"69","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":37,"column":9},"end":{"line":39,"column":10}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"70","mutatorName":"Statement mutation","replacement":";","location":{"start":{"line":38,"column":13},"end":{"line":38,"column":147}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"71","mutatorName":"String mutation","replacement":"$\u0022\u0022","location":{"start":{"line":38,"column":49},"end":{"line":38,"column":145}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"72","mutatorName":"Arithmetic mutation","replacement":"fePercent.Value - cPercent.Value","location":{"start":{"line":38,"column":108},"end":{"line":38,"column":140}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"73","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":49,"column":5},"end":{"line":57,"column":6}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"74","mutatorName":"Statement mutation","replacement":";","location":{"start":{"line":52,"column":9},"end":{"line":52,"column":70}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false}]},"D:\\GitHubRepos\\blast-furnace-mass-balance\\src\\csharp\\BlastFurnace.MassBalance.Lib\\IronOre.cs":{"language":"cs","source":"using Newtonsoft.Json;\r\n\r\nnamespace BlastFurnace.MassBalance.Lib;\r\n\r\n/// \u003Csummary\u003E\r\n/// Describes iron ore composition and its proportion in a mixture with other iron ores\r\n/// \u003C/summary\u003E\r\npublic class IronOre\r\n{\r\n    /// \u003Csummary\u003E\r\n    /// Fe content of Iron Ore\r\n    /// \u003C/summary\u003E\r\n    public Percentual FeContent { get; set; }\r\n\r\n    /// \u003Csummary\u003E\r\n    /// Proportion of Iron Ore in a blending setup\r\n    /// \u003C/summary\u003E\r\n    public Percentual Proportion { get; set; }\r\n\r\n    /// \u003Csummary\u003E\r\n    /// Initialize an iron ore instance\r\n    /// \u003C/summary\u003E\r\n    /// \u003Cparam name=\u0022feContent\u0022\u003E\u003C/param\u003E\r\n    /// \u003Cparam name=\u0022proportion\u0022\u003E\u003C/param\u003E\r\n    public IronOre(Percentual feContent, Percentual proportion)\r\n    {\r\n        FeContent = feContent;\r\n        Proportion = proportion;\r\n    }\r\n\r\n    /// \u003Csummary\u003E\r\n    /// String representation of IronOre\r\n    /// \u003C/summary\u003E\r\n    /// \u003Creturns\u003E\u003C/returns\u003E\r\n    public override string ToString()\r\n    {\r\n        var jsonRepresentation = JsonConvert.SerializeObject(this, Formatting.Indented);\r\n        return jsonRepresentation.ToString();\r\n    }\r\n}\r\n","mutants":[{"id":"75","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":26,"column":5},"end":{"line":29,"column":6}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"76","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":36,"column":5},"end":{"line":39,"column":6}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false}]},"D:\\GitHubRepos\\blast-furnace-mass-balance\\src\\csharp\\BlastFurnace.MassBalance.Lib\\IronOreBlend.cs":{"language":"cs","source":"using System;\r\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\n\nusing Newtonsoft.Json;\n\nnamespace BlastFurnace.MassBalance.Lib;\r\n\r\n/// \u003Csummary\u003E\r\n/// A collection of Iron Ores\r\n/// \u003C/summary\u003E\r\npublic class IronOreBlend\r\n{\r\n    private readonly List\u003CIronOre\u003E ironOres = new List\u003CIronOre\u003E();\n\n    /// \u003Csummary\u003E\n    /// A read-only collection of iron ores\n    /// \u003C/summary\u003E\n    public ReadOnlyCollection\u003CIronOre\u003E IronOres\n    {\n        get\n        {\n            return ironOres.AsReadOnly();\n        }\n    }\n\n    /// \u003Csummary\u003E\r\n    /// Total proportion of iron ores in this blend.\r\n    /// \u003C/summary\u003E\r\n    /// \u003Cremarks\u003E\r\n    /// For a full set up iron ore blend, this value must be equal to 100%\r\n    /// For a partially defined iron ore blend, this value can be lower than 100%\r\n    /// \u003C/remarks\u003E\r\n    public double TotalProportion { get; private set; }\r\n\r\n    /// \u003Csummary\u003E\r\n    /// Add one iron ore to the blend of iron ores\r\n    /// \u003C/summary\u003E\r\n    /// \u003Cparam name=\u0022ironOre\u0022\u003E\u003C/param\u003E\r\n    /// \u003Cexception cref=\u0022InvalidOperationException\u0022\u003E\u003C/exception\u003E\r\n    public void Add(IronOre ironOre)\r\n    {\r\n        if (TotalProportion \u002B ironOre.Proportion.Value \u003E 100)\r\n        {\r\n            throw new InvalidOperationException(\u0022Total proportion must be at a maximum of 100%.\u0022);\r\n        }\r\n\r\n        TotalProportion \u002B= ironOre.Proportion.Value;\r\n        ironOres.Add(ironOre);\r\n    }\r\n\r\n    /// \u003Csummary\u003E\r\n    /// Normalize proportions of iron ores to 100%\r\n    /// \u003C/summary\u003E\r\n    public void NormalizeProportions()\r\n    {\r\n        var tempTotalProportion = 0d;\r\n\r\n        foreach (var ironOre in ironOres)\r\n        {\r\n            ironOre.Proportion.Value = ironOre.Proportion.Value / TotalProportion * 100;\r\n            tempTotalProportion \u002B= ironOre.Proportion.Value;\r\n        }\r\n\r\n        TotalProportion = tempTotalProportion;\r\n    }\n\n    /// \u003Csummary\u003E\n    /// String representation of IronOreBlend\n    /// \u003C/summary\u003E\n    /// \u003Creturns\u003E\u003C/returns\u003E\n    public override string ToString()\n    {\n        var jsonRepresentation = JsonConvert.SerializeObject(this, Formatting.Indented);\r\n\r\n        return jsonRepresentation.ToString();\n    }\r\n}\r\n","mutants":[{"id":"77","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":22,"column":9},"end":{"line":24,"column":10}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"78","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":42,"column":5},"end":{"line":50,"column":6}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"79","mutatorName":"Equality mutation","replacement":"TotalProportion \u002B ironOre.Proportion.Value \u003C 100","location":{"start":{"line":43,"column":13},"end":{"line":43,"column":61}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"80","mutatorName":"Equality mutation","replacement":"TotalProportion \u002B ironOre.Proportion.Value \u003E= 100","location":{"start":{"line":43,"column":13},"end":{"line":43,"column":61}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"81","mutatorName":"Negate expression","replacement":"!(TotalProportion \u002B ironOre.Proportion.Value \u003E 100)","location":{"start":{"line":43,"column":13},"end":{"line":43,"column":61}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"82","mutatorName":"Arithmetic mutation","replacement":"TotalProportion - ironOre.Proportion.Value","location":{"start":{"line":43,"column":13},"end":{"line":43,"column":55}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"83","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":44,"column":9},"end":{"line":46,"column":10}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"84","mutatorName":"Statement mutation","replacement":";","location":{"start":{"line":45,"column":13},"end":{"line":45,"column":99}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"85","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":45,"column":49},"end":{"line":45,"column":97}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"86","mutatorName":"AddAssignmentExpression to SubtractAssignmentExpression mutation","replacement":"TotalProportion -= ironOre.Proportion.Value","location":{"start":{"line":48,"column":9},"end":{"line":48,"column":52}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"87","mutatorName":"Statement mutation","replacement":";","location":{"start":{"line":49,"column":9},"end":{"line":49,"column":31}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"88","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":56,"column":5},"end":{"line":66,"column":6}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"89","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":60,"column":9},"end":{"line":63,"column":10}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"90","mutatorName":"Arithmetic mutation","replacement":"ironOre.Proportion.Value / TotalProportion / 100","location":{"start":{"line":61,"column":40},"end":{"line":61,"column":88}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"91","mutatorName":"Arithmetic mutation","replacement":"ironOre.Proportion.Value * TotalProportion","location":{"start":{"line":61,"column":40},"end":{"line":61,"column":82}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"92","mutatorName":"AddAssignmentExpression to SubtractAssignmentExpression mutation","replacement":"tempTotalProportion -= ironOre.Proportion.Value","location":{"start":{"line":62,"column":13},"end":{"line":62,"column":60}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"93","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":73,"column":5},"end":{"line":77,"column":6}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false}]},"D:\\GitHubRepos\\blast-furnace-mass-balance\\src\\csharp\\BlastFurnace.MassBalance.Lib\\Percentual.cs":{"language":"cs","source":"using System;\r\n\r\nusing Newtonsoft.Json;\r\n\r\nnamespace BlastFurnace.MassBalance.Lib;\r\n\r\n/// \u003Csummary\u003E\r\n/// Describe percent quantities (from 0 to 100%) that describe raw material chemistry\r\n/// \u003C/summary\u003E\r\npublic class Percentual\r\n{\r\n    /// \u003Csummary\u003E\r\n    /// Hold the percentage value\r\n    /// \u003C/summary\u003E\r\n    public double Value { get; set; }\r\n\r\n    /// \u003Csummary\u003E\r\n    /// Initialize and validate Percentual instance\r\n    /// \u003C/summary\u003E\r\n    /// \u003Cparam name=\u0022value\u0022\u003E\u003C/param\u003E\r\n    public Percentual(double value)\r\n    {\r\n        if (value \u003C 0 || value \u003E 100)\r\n        {\r\n            throw new ArgumentOutOfRangeException(nameof(value), $\u0022Percentage value must belong to [0,100] interval. Current value ({value}) is invalid!\u0022);\r\n        }\r\n        Value = value;\r\n    }\r\n\r\n    /// \u003Csummary\u003E\r\n    /// String representation of Percentual\r\n    /// \u003C/summary\u003E\r\n    public override string ToString()\r\n    {\r\n        var jsonRepresentation = JsonConvert.SerializeObject(this, Formatting.Indented);\r\n        return jsonRepresentation.ToString();\r\n    }\r\n}\r\n","mutants":[{"id":"94","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":22,"column":5},"end":{"line":28,"column":6}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"95","mutatorName":"Logical mutation","replacement":"value \u003C 0 \u0026\u0026 value \u003E 100","location":{"start":{"line":23,"column":13},"end":{"line":23,"column":37}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"96","mutatorName":"Negate expression","replacement":"!(value \u003C 0 || value \u003E 100)","location":{"start":{"line":23,"column":13},"end":{"line":23,"column":37}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"97","mutatorName":"Equality mutation","replacement":"value \u003E 0","location":{"start":{"line":23,"column":13},"end":{"line":23,"column":22}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"98","mutatorName":"Equality mutation","replacement":"value \u003C= 0","location":{"start":{"line":23,"column":13},"end":{"line":23,"column":22}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"99","mutatorName":"Equality mutation","replacement":"value \u003C 100","location":{"start":{"line":23,"column":26},"end":{"line":23,"column":37}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"100","mutatorName":"Equality mutation","replacement":"value \u003E= 100","location":{"start":{"line":23,"column":26},"end":{"line":23,"column":37}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"101","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":24,"column":9},"end":{"line":26,"column":10}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"102","mutatorName":"Statement mutation","replacement":";","location":{"start":{"line":25,"column":13},"end":{"line":25,"column":156}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"103","mutatorName":"String mutation","replacement":"$\u0022\u0022","location":{"start":{"line":25,"column":66},"end":{"line":25,"column":154}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"104","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":34,"column":5},"end":{"line":37,"column":6}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false}]},"D:\\GitHubRepos\\blast-furnace-mass-balance\\src\\csharp\\BlastFurnace.MassBalance.Lib\\PulverizedCoalInjection.cs":{"language":"cs","source":"using Newtonsoft.Json;\r\nusing Newtonsoft.Json.Converters;\n\nnamespace BlastFurnace.MassBalance.Lib;\r\n\r\n/// \u003Csummary\u003E\r\n/// Describes Pulverized Coal Injection composition\r\n/// \u003C/summary\u003E\r\npublic class PulverizedCoalInjection\r\n{\r\n    /// \u003Csummary\u003E\r\n    /// C content of Pulverized Coal Injection\r\n    /// \u003C/summary\u003E\r\n    public Percentual CContent { get; set; }\r\n\n    /// \u003Csummary\u003E\n    /// Weight of Pulverized Coal Injection\n    /// \u003C/summary\u003E\n    public Weight Weight { get; set; }\n\n    /// \u003Csummary\u003E\r\n    /// Initialize an Pulverized Coal Injection instance\r\n    /// \u003C/summary\u003E\r\n    /// \u003Cparam name=\u0022cContent\u0022\u003E\u003C/param\u003E\r\n    /// \u003Cparam name=\u0022weight\u0022\u003E\u003C/param\u003E\r\n    public PulverizedCoalInjection(Percentual cContent, Weight weight)\r\n    {\r\n        CContent = cContent;\n        Weight = weight;\r\n    }\r\n\r\n    /// \u003Csummary\u003E\r\n    /// String representation of Pulverized Coal Injection\r\n    /// \u003C/summary\u003E\r\n    /// \u003Creturns\u003E\u003C/returns\u003E\r\n    public override string ToString()\r\n    {\n        // https://code-maze.com/csharp-serialize-enum-to-string/\n        var serializerSettings = new JsonSerializerSettings();\r\n        serializerSettings.Converters.Add(new StringEnumConverter());\r\n\r\n        var jsonRepresentation = JsonConvert.SerializeObject(this, Formatting.Indented, serializerSettings);\r\n        return jsonRepresentation.ToString();\r\n    }\r\n}\r\n","mutants":[{"id":"105","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":27,"column":5},"end":{"line":30,"column":6}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"106","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":37,"column":5},"end":{"line":44,"column":6}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false},{"id":"107","mutatorName":"Statement mutation","replacement":";","location":{"start":{"line":40,"column":9},"end":{"line":40,"column":70}},"status":"Killed","statusReason":"Mutant changed compared to target commit","static":false}]},"D:\\GitHubRepos\\blast-furnace-mass-balance\\src\\csharp\\BlastFurnace.MassBalance.Lib\\UnitConversion.cs":{"language":"cs","source":"using System;\r\n\r\nnamespace BlastFurnace.MassBalance.Lib;\r\n\r\n/// \u003Csummary\u003E\r\n/// Static class that performs conversion between different measurement units\r\n/// \u003C/summary\u003E\r\npublic static class UnitConversion\r\n{\r\n    private static readonly double metricTonTokgFactor = 1000;\r\n    private static readonly string notImplementedUnitConversion = \u0022Conversion between {0} and {1} is not implemented yet!\u0022;\r\n\r\n    /// \u003Csummary\u003E\r\n    /// Performs conversion between weight units\r\n    /// \u003C/summary\u003E\r\n    /// \u003Cparam name=\u0022originalWeight\u0022\u003E\u003C/param\u003E\r\n    /// \u003Cparam name=\u0022newWeightUnits\u0022\u003E\u003C/param\u003E\r\n    /// \u003Creturns\u003E\u003C/returns\u003E\r\n    public static Weight WeightConversion(Weight originalWeight, WeightUnits newWeightUnits)\r\n    {\r\n        double convertedValue;\r\n        string formattedMessage;\r\n\r\n        switch (originalWeight.Unit)\r\n        {\r\n            case WeightUnits.kilogram:\r\n                switch (newWeightUnits)\r\n                {\r\n                    case WeightUnits.kilogram:\r\n                        convertedValue = originalWeight.Value;\r\n                        break;\r\n                    case WeightUnits.metricTon:\r\n                        convertedValue = originalWeight.Value / metricTonTokgFactor;\r\n                        break;\r\n                    default:\r\n                        formattedMessage = String.Format(notImplementedUnitConversion, originalWeight.Unit, newWeightUnits);\r\n                        throw new NotImplementedException(formattedMessage);\r\n                }\r\n                break;\r\n            case WeightUnits.metricTon:\r\n                switch (newWeightUnits)\r\n                {\r\n                    case WeightUnits.kilogram:\r\n                        convertedValue = originalWeight.Value * metricTonTokgFactor;\r\n                        break;\r\n                    case WeightUnits.metricTon:\r\n                        convertedValue = originalWeight.Value;\r\n                        break;\r\n                    default:\r\n                        formattedMessage = String.Format(notImplementedUnitConversion, originalWeight.Unit, newWeightUnits);\r\n                        throw new NotImplementedException(formattedMessage);\r\n                }\r\n                break;\r\n            default:\r\n                formattedMessage = String.Format(notImplementedUnitConversion, originalWeight.Unit, newWeightUnits);\r\n                throw new NotImplementedException(formattedMessage);\r\n        }\r\n\r\n        var newWeight = new Weight(convertedValue, newWeightUnits);\r\n\r\n        return newWeight;\r\n    }\r\n}\r\n","mutants":[{"id":"108","mutatorName":"String mutation","replacement":"\u0022\u0022","location":{"start":{"line":11,"column":67},"end":{"line":11,"column":123}},"status":"Ignored","statusReason":"Mutant not changed compared to target commit","static":true},{"id":"109","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":20,"column":5},"end":{"line":62,"column":6}},"status":"Ignored","statusReason":"Mutant not changed compared to target commit","static":false},{"id":"110","mutatorName":"Arithmetic mutation","replacement":"originalWeight.Value * metricTonTokgFactor","location":{"start":{"line":33,"column":42},"end":{"line":33,"column":84}},"status":"Ignored","statusReason":"Mutant not changed compared to target commit","static":false},{"id":"111","mutatorName":"Arithmetic mutation","replacement":"originalWeight.Value / metricTonTokgFactor","location":{"start":{"line":44,"column":42},"end":{"line":44,"column":84}},"status":"Ignored","statusReason":"Mutant not changed compared to target commit","static":false}]},"D:\\GitHubRepos\\blast-furnace-mass-balance\\src\\csharp\\BlastFurnace.MassBalance.Lib\\Weight.cs":{"language":"cs","source":"using System;\r\n\r\nnamespace BlastFurnace.MassBalance.Lib;\r\n\r\n/// \u003Csummary\u003E\r\n/// Holds both the quantity and unit of weights processed by mass balance and other engineering calculations\r\n/// \u003C/summary\u003E\r\npublic class Weight\r\n{\r\n    /// \u003Csummary\u003E\r\n    /// The value of weight\r\n    /// \u003C/summary\u003E\r\n    public double Value { get; private set; }\r\n\r\n    /// \u003Csummary\u003E\r\n    /// The unit of measurement of weight\r\n    /// \u003C/summary\u003E\r\n    public WeightUnits Unit { get; private set; }\r\n\r\n    /// \u003Csummary\u003E\r\n    /// Initialize Weight and validate it\r\n    /// \u003C/summary\u003E\r\n    /// \u003Cparam name=\u0022value\u0022\u003E\u003C/param\u003E\r\n    /// \u003Cparam name=\u0022units\u0022\u003E\u003C/param\u003E\r\n    /// \u003Cexception cref=\u0022ArgumentOutOfRangeException\u0022\u003E\u003C/exception\u003E\r\n    public Weight(double value, WeightUnits units)\r\n    {\r\n        if (value \u003C 0 )\r\n        {\r\n            throw new ArgumentOutOfRangeException(nameof(value), $\u0022{nameof(value)} can\u0027t be negative!\u0022);\r\n        }\r\n\r\n        Value = value;\r\n        Unit = units;\r\n    }\r\n}\r\n","mutants":[{"id":"112","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":27,"column":5},"end":{"line":35,"column":6}},"status":"Ignored","statusReason":"Mutant not changed compared to target commit","static":false},{"id":"113","mutatorName":"Equality mutation","replacement":"value \u003E 0","location":{"start":{"line":28,"column":13},"end":{"line":28,"column":22}},"status":"Ignored","statusReason":"Mutant not changed compared to target commit","static":false},{"id":"114","mutatorName":"Equality mutation","replacement":"value \u003C= 0","location":{"start":{"line":28,"column":13},"end":{"line":28,"column":22}},"status":"Ignored","statusReason":"Mutant not changed compared to target commit","static":false},{"id":"115","mutatorName":"Negate expression","replacement":"!(value \u003C 0 )","location":{"start":{"line":28,"column":13},"end":{"line":28,"column":22}},"status":"Ignored","statusReason":"Mutant not changed compared to target commit","static":false},{"id":"116","mutatorName":"Block removal mutation","replacement":"{}","location":{"start":{"line":29,"column":9},"end":{"line":31,"column":10}},"status":"Ignored","statusReason":"Mutant not changed compared to target commit","static":false},{"id":"117","mutatorName":"Statement mutation","replacement":";","location":{"start":{"line":30,"column":13},"end":{"line":30,"column":105}},"status":"Ignored","statusReason":"Mutant not changed compared to target commit","static":false},{"id":"118","mutatorName":"String mutation","replacement":"$\u0022\u0022","location":{"start":{"line":30,"column":66},"end":{"line":30,"column":103}},"status":"Ignored","statusReason":"Mutant not changed compared to target commit","static":false}]},"D:\\GitHubRepos\\blast-furnace-mass-balance\\src\\csharp\\BlastFurnace.MassBalance.Lib\\WeightUnits.cs":{"language":"cs","source":"namespace BlastFurnace.MassBalance.Lib;\r\n\r\n\r\n/// \u003Csummary\u003E\r\n/// Describe the weight units available to be used in mass balance and other engineering calculations\r\n/// \u003C/summary\u003E\r\n/// \u003Cremarks\u003E\r\n/// \u003Clist type=\u0022bullet\u0022\u003E\r\n/// \u003Citem\u003Ekilogram\u003C/item\u003E\r\n/// \u003Citem\u003Emetric ton\u003C/item\u003E \r\n/// \u003C/list\u003E\r\n/// \u003C/remarks\u003E\r\npublic enum WeightUnits\r\n{\r\n#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member\r\n    kilogram = 0,\r\n\r\n    metricTon = 1,\r\n#pragma warning restore CS1591 // Missing XML comment for publicly visible type or member\r\n}\r\n","mutants":[]}}}